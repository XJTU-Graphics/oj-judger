# 项目开发指南

此项目是图形学专用 OJ (Online Judge) 的评测服务端部分，专门负责接收和执行评测任务，用一个临时的 SQLite 数据库维护运行数据，评测所需文件（项目模板除外）均从 Web 服务端获取，在完成评测后删除。在开发过程中应当注意仅维护分发和执行评测所必须的状态信息，需要持久化保存的状态都是由 Web 服务端维护的。

## 技术方案

项目使用 Python 3 语言和 Flask 框架开发。评测服务端是一个分布式系统，包括两种节点：
- 管理节点 (manager) 是唯一的、负责与 Web 服务端交互并管理评测任务的节点，该节点上有用于临时维护数据的 SQLite 数据库，注意数据库的作用是进程交互而不是持久化数据，其中的数据在每次重启服务时都会被清空
- 执行节点 (executor) 是若干负责实际执行评测任务的节点，所有的数据都在内存中或以临时文件的形式暂时保存，在每次完成评测任务后都会清空

## 代码要求

- 所有函数的入参和返回值必须有类型标注，除非这个函数不返回任何东西（即返回类型是 `None`）。
- 新增或修改服务层的函数时，必须相应更新它的 docstring，维护 Sphinx 风格的注释。由于已有类型注解，不需要使用 `:type:` 来说明参数和返回值类型。
- 建议在逻辑比较复杂的代码块上方（或代码块中）额外增加简短的注释说明。
- 禁止使用字符串拼接路径，所有涉及文件路径的操作必须使用 Python 的内置模块 `Path`。
